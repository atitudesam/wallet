{"ast":null,"code":"import Router from 'next/router';\nimport getNameServer from '../utils/getNameServer'; // If redirect is true, when user doesn't exist return to home page\n\nexport default (async (ctx, redirect = false) => {\n  const token = ctx.store.getState().authentication.token;\n  const server = getNameServer(ctx);\n  const res = await fetch(`${server}/api/user`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: token\n    }\n  });\n\n  if (res.status === 200) {\n    const {\n      user\n    } = await res.json();\n    return user;\n  }\n\n  if (redirect) {\n    Router.push('/');\n  }\n\n  return null;\n});","map":{"version":3,"sources":["/Users/mubashirsiddiqui/Projects/mubaggresive/wallet/frontend/getInitialProps/getUser.js"],"names":["Router","getNameServer","ctx","redirect","token","store","getState","authentication","server","res","fetch","method","headers","authorization","status","user","json","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B,C,CAEA;;AACA,gBAAe,OAAOC,GAAP,EAAYC,QAAQ,GAAG,KAAvB,KAAiC;AAC9C,QAAMC,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAUC,QAAV,GAAqBC,cAArB,CAAoCH,KAAlD;AACA,QAAMI,MAAM,GAAGP,aAAa,CAACC,GAAD,CAA5B;AACA,QAAMO,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEF,MAAO,WAAX,EAAuB;AAC5CG,IAAAA,MAAM,EAAE,KADoC;AAE5CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAET;AAFR;AAFmC,GAAvB,CAAvB;;AAOA,MAAIK,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACO,IAAJ,EAAvB;AACA,WAAOD,IAAP;AACD;;AACD,MAAIZ,QAAJ,EAAc;AACZH,IAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;;AACD,SAAO,IAAP;AACD,CAlBD","sourcesContent":["import Router from 'next/router';\nimport getNameServer from '../utils/getNameServer';\n\n// If redirect is true, when user doesn't exist return to home page\nexport default async (ctx, redirect = false) => {\n  const token = ctx.store.getState().authentication.token;\n  const server = getNameServer(ctx);\n  const res = await fetch(`${server}/api/user`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: token,\n    },\n  });\n  if (res.status === 200) {\n    const { user } = await res.json();\n    return user;\n  }\n  if (redirect) {\n    Router.push('/');\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}