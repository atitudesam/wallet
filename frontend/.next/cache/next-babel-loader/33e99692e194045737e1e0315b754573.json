{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport getNameServer from '../utils/getNameServer'; // If redirect is true, when user doesn't exist return to home page\n\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var redirect,\n        token,\n        server,\n        res,\n        _yield$res$json,\n        user,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            redirect = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n            token = ctx.store.getState().authentication.token;\n            server = getNameServer(ctx);\n            _context.next = 5;\n            return fetch(\"\".concat(server, \"/api/user\"), {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                authorization: token\n              }\n            });\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res.status === 200)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            _yield$res$json = _context.sent;\n            user = _yield$res$json.user;\n            return _context.abrupt(\"return\", user);\n\n          case 12:\n            if (redirect) {\n              Router.push('/');\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/mubashirsiddiqui/Projects/mubaggresive/wallet/frontend/getInitialProps/getUser.js"],"names":["Router","getNameServer","ctx","redirect","token","store","getState","authentication","server","fetch","method","headers","authorization","res","status","json","user","push"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B,C,CAEA;;AACA;AAAA,sEAAe,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAYC,YAAAA,QAAZ,2DAAuB,KAAvB;AACPC,YAAAA,KADO,GACCF,GAAG,CAACG,KAAJ,CAAUC,QAAV,GAAqBC,cAArB,CAAoCH,KADrC;AAEPI,YAAAA,MAFO,GAEEP,aAAa,CAACC,GAAD,CAFf;AAAA;AAAA,mBAGKO,KAAK,WAAID,MAAJ,gBAAuB;AAC5CE,cAAAA,MAAM,EAAE,KADoC;AAE5CC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,aAAa,EAAER;AAFR;AAFmC,aAAvB,CAHV;;AAAA;AAGPS,YAAAA,GAHO;;AAAA,kBAUTA,GAAG,CAACC,MAAJ,KAAe,GAVN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWYD,GAAG,CAACE,IAAJ,EAXZ;;AAAA;AAAA;AAWHC,YAAAA,IAXG,mBAWHA,IAXG;AAAA,6CAYJA,IAZI;;AAAA;AAcb,gBAAIb,QAAJ,EAAc;AACZH,cAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;;AAhBY,6CAiBN,IAjBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import Router from 'next/router';\nimport getNameServer from '../utils/getNameServer';\n\n// If redirect is true, when user doesn't exist return to home page\nexport default async (ctx, redirect = false) => {\n  const token = ctx.store.getState().authentication.token;\n  const server = getNameServer(ctx);\n  const res = await fetch(`${server}/api/user`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: token,\n    },\n  });\n  if (res.status === 200) {\n    const { user } = await res.json();\n    return user;\n  }\n  if (redirect) {\n    Router.push('/');\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}