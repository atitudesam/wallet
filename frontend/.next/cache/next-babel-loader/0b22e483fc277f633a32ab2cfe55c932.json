{"ast":null,"code":"import Router from 'next/router';\nimport actions from '../redux/actions';\nimport { getCookie } from '../utils/cookie'; // checks if the page is being loaded on the server, and if so, get auth token from the cookie:\n\nexport default function (ctx) {\n  if (ctx.req) {\n    if (ctx.req.headers.cookie) {\n      ctx.store.dispatch(actions.reauthenticate(getCookie('token', ctx.req)));\n    }\n  } else {\n    const token = ctx.store.getState().authentication.token;\n\n    if (token && (ctx.pathname === '/login' || ctx.pathname === '/register')) {\n      setTimeout(function () {\n        Router.push('/login');\n      }, 0);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/mubashirsiddiqui/Projects/mubaggresive/wallet/frontend/getInitialProps/verifyToken.js"],"names":["Router","actions","getCookie","ctx","req","headers","cookie","store","dispatch","reauthenticate","token","getState","authentication","pathname","setTimeout","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CAEA;;AACA,eAAe,UAAUC,GAAV,EAAe;AAC5B,MAAIA,GAAG,CAACC,GAAR,EAAa;AACX,QAAID,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBC,MAApB,EAA4B;AAC1BH,MAAAA,GAAG,CAACI,KAAJ,CAAUC,QAAV,CAAmBP,OAAO,CAACQ,cAAR,CAAuBP,SAAS,CAAC,OAAD,EAAUC,GAAG,CAACC,GAAd,CAAhC,CAAnB;AACD;AACF,GAJD,MAIO;AACL,UAAMM,KAAK,GAAGP,GAAG,CAACI,KAAJ,CAAUI,QAAV,GAAqBC,cAArB,CAAoCF,KAAlD;;AAEA,QAAIA,KAAK,KAAKP,GAAG,CAACU,QAAJ,KAAiB,QAAjB,IAA6BV,GAAG,CAACU,QAAJ,KAAiB,WAAnD,CAAT,EAA0E;AACxEC,MAAAA,UAAU,CAAC,YAAY;AACrBd,QAAAA,MAAM,CAACe,IAAP,CAAY,QAAZ;AACD,OAFS,EAEP,CAFO,CAAV;AAGD;AACF;AACF","sourcesContent":["import Router from 'next/router';\nimport actions from '../redux/actions';\nimport { getCookie } from '../utils/cookie';\n\n// checks if the page is being loaded on the server, and if so, get auth token from the cookie:\nexport default function (ctx) {\n  if (ctx.req) {\n    if (ctx.req.headers.cookie) {\n      ctx.store.dispatch(actions.reauthenticate(getCookie('token', ctx.req)));\n    }\n  } else {\n    const token = ctx.store.getState().authentication.token;\n\n    if (token && (ctx.pathname === '/login' || ctx.pathname === '/register')) {\n      setTimeout(function () {\n        Router.push('/login');\n      }, 0);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}